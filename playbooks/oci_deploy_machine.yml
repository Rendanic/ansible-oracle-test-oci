---

- name: Deploy machines
  hosts: all
  gather_facts: false
  any_errors_fatal: true
  vars:
    ansible_connection: local
    instance_ad: "{{ lookup('ansible.builtin.env', 'AVAILABILITY_DOMAIN') }}"
    instance_compartment: "{{ lookup('ansible.builtin.env', 'COMPARTMENT') }}"
    instance_subnet_id: "{{ lookup('ansible.builtin.env', 'INSTANCE_SUBNET_ID') }}"
    # instance_image: ocid1.image.oc1.eu-frankfurt-1.aaaaaaaa4qgh74csl6sentnhk4wq32cjeqsqpejwyyfvg2ikr44w7gbmomwa
    # boot_volume_size: 80
    # instance_shape:  "VM.Standard.E4.Flex"
    # instance_shape_config:
    #   ocpus: 1
    #   memory_in_gbs: 1
    #   baseline_ocpu_utilization: BASELINE_1_8
    ssh_authorized_keys: "{{ lookup('ansible.builtin.env', 'PUBLIC_USER_KEYS') }}"

    # block_volumes:
    #   - name: ASM
    #     size: 50
  tasks:
    - name: Terminate existing machine
      when:
        instance_replace | default(false)
      block:
        - name: Terminate existing machine
          ansible.builtin.debug:
            msg: "Terminate machine {{ instance_hostname }}" 
          delegate_to: localhost

        - name: Terminate existing machine
          oracle.oci.oci_compute_instance:
            compartment_id: "{{ instance_compartment }}"
            display_name: "{{ instance_hostname | mandatory }}"
            state: absent
            wait: true
          delegate_to: localhost

        - name: Get List of Block Volumes
          oracle.oci.oci_blockstorage_volume_facts:
            compartment_id: "{{ instance_compartment }}"
            lifecycle_state: AVAILABLE
          register: inst_block_volumes

        - name: Terminate Block volumes
          oracle.oci.oci_blockstorage_volume:
            compartment_id: "{{ instance_compartment }}"
            volume_id: "{{ item.id }}"
            state: absent
          with_items:
            - "{{ inst_block_volumes.volumes }}"
          loop_control:
            extended: true
          when:
            - inst_block_volumes.volumes is defined
            - item.display_name is defined
            - item.display_name | regex_search("^" + instance_hostname + " (.*)")

    - name: Launch instance
      oracle.oci.oci_compute_instance:
        availability_domain: "{{ instance_ad }}"
        compartment_id: "{{ instance_compartment }}"
        display_name: "{{ instance_hostname }}"
        wait: true
        source_details:
          boot_volume_size_in_gbs: "{{ boot_volume_size | default(omit) }}"
          source_type: image
          image_id: "{{ instance_image }}"
        shape: "{{ instance_shape }}"
        shape_config: "{{ instance_shape_config }}"
        create_vnic_details:
          assign_public_ip: True
          hostname_label: "{{ instance_hostname }}"
          subnet_id: "{{ instance_subnet_id }}"
        freeform_tags: "{{ instance_freeform_tags | default(omit) }}"
        metadata:
          ssh_authorized_keys: "{{ ssh_authorized_keys }}"
      register: result_instance
      delegate_to: localhost

    - name: Print instance details
      ansible.builtin.debug:
        var: result_instance.instance
      when:
        - result_instance.instance is defined
      delegate_to: localhost

    - name: Manage Block Devices
      when:
        - block_volumes is defined
        - result_instance.instance is defined
      block:
        - name: Create a volume
          oracle.oci.oci_blockstorage_volume:
            availability_domain: "{{ instance_ad }}"
            compartment_id: "{{ instance_compartment }}"
            name: "{{ instance_hostname }} {{ item.name }}"
            size_in_gbs: "{{ item.size }}"
          register: result
          with_items:
            - "{{ block_volumes }}"
          loop_control:
            extended: true

        - name: Print volume details
          debug:
            var: result.results[ansible_loop.index0]
          with_items:
            - "{{ block_volumes }}"
          loop_control:
            extended: true

        - name: Attach volume to instance
          oracle.oci.oci_compute_volume_attachment:
            instance_id: "{{ result_instance.instance.id }}"
            type: paravirtualized
            volume_id: "{{ result.results[ansible_loop.index0].volume.id }}"
            compartment_id: "{{ instance_compartment }}"
          with_items:
            - "{{ block_volumes }}"
          loop_control:
            extended: true

    - name: Start machine when not recreated
      oracle.oci.oci_compute_instance_actions:
        instance_id: "{{ result_instance.instance.id }}"
        action: start
      delegate_to: localhost
      when:
        not instance_replace | default(false)
