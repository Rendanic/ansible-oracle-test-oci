---

- name: Deploy machines
  hosts: localhost
  gather_facts: false
  any_errors_fatal: true
  vars:
    ansible_connection: local
    # instance_hostname: ansible-oracle-test
    instance_ad: "{{ lookup('ansible.builtin.env', 'AVAILABILITY_DOMAIN') }}"
    # DCSu:EU-FRANKFURT-1-AD-1
    instance_compartment: ocid1.compartment.oc1..aaaaaaaaye3pks3l3v5sdl265sj5yuag2pmx4r6pvkzkv7voclmtdcbjzozq
    instance_subnet_id: ocid1.subnet.oc1.eu-frankfurt-1.aaaaaaaag2wmn7xfyw23tin5x43oovqevwf6updw5ddm3ogmzmvaihksmiqq
    instance_image: ocid1.image.oc1.eu-frankfurt-1.aaaaaaaa4qgh74csl6sentnhk4wq32cjeqsqpejwyyfvg2ikr44w7gbmomwa
    boot_volume_size: 80
    instance_shape:  "VM.Standard.E4.Flex"
    instance_shape_config:
      ocpus: 1
      memory_in_gbs: 1
      baseline_ocpu_utilization: BASELINE_1_8

  tasks:
    - debug: var=instance_ad
    - fail:
    - name: Terminate existing machine
      oracle.oci.oci_compute_instance:
        compartment_id: "{{ instance_compartment }}"
        display_name: "{{ instance_hostname | mandatory }}"
        state: absent
        wait: true
      delegate_to: localhost
      when:
        instance_replace | default(false)

    - name: Launch instance
      oracle.oci.oci_compute_instance:
        availability_domain: "{{ instance_ad }}"
        compartment_id: "{{ instance_compartment }}"
        display_name: "{{ instance_hostname }}"
        source_details:
          boot_volume_size_in_gbs: "{{ boot_volume_size }}"
          source_type: image
          image_id: "{{ instance_image }}"
        shape: "{{ instance_shape }}"
        shape_config: "{{ instance_shape_config }}"
        create_vnic_details:
            assign_public_ip: True
            hostname_label: "{{ instance_hostname }}"
            subnet_id: "{{ instance_subnet_id }}"
          # defined_tags:
          # freeform_tags:
        # metadata:
        #     ssh_authorized_keys: "{{ lookup('file',  my_test_public_key ) }}"
      register: result
      delegate_to: localhost

    - name: Print instance details
      ansible.builtin.debug:
        var: result.instance
      when:
        - result.instance is defined
      delegate_to: localhost
    # - set_fact:
    #     instance_id: "{{result.instance.id }}"

    - name: Start machine when not recreated
      oracle.oci.oci_compute_instance_actions:
        instance_id: "{{ result.instance.id }}"
        action: start
      delegate_to: localhost
      when:
        not instance_replace | default(false)
